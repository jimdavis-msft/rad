name: Deploy Core Infra

on:
  workflow_call:
    inputs:
      target-ring:
        required: true
        type: string 
      variables:
        required: true
        type: string  

permissions:
  id-token: write
  contents: read

jobs:
  deploy-core-infra:
    runs-on: ${{fromJSON(inputs.variables).RunnerLabel }}
    name: Deploy Core Infra
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repo

      # LOGIN AZ POWERSHELL
      - uses: azure/login@v1
        with:
          # creds: '{"clientId":"${{fromJSON(inputs.variables).RunnerServicePrincipalId }}","clientSecret":"${{ secrets.AZURE_CREDENTIALS }}","subscriptionId":"${{fromJSON(inputs.variables).SubscriptionId }}","tenantId":"${{fromJSON(inputs.variables).TenantId }}"}'
          client-id: ${{fromJSON(inputs.variables).RunnerServicePrincipalId }}
          tenant-id: ${{fromJSON(inputs.variables).TenantId }}
          subscription-id: ${{fromJSON(inputs.variables).SubscriptionId }}
          enable-AzPSSession: true
          
      # LOGIN AZ CLI
      - uses: azure/login@v1
        with:
          # creds: '{"clientId":"${{fromJSON(inputs.variables).RunnerServicePrincipalId }}","clientSecret":"${{ secrets.AZURE_CREDENTIALS }}","subscriptionId":"${{fromJSON(inputs.variables).SubscriptionId }}","tenantId":"${{fromJSON(inputs.variables).TenantId }}"}'
          client-id: ${{fromJSON(inputs.variables).RunnerServicePrincipalId }}
          tenant-id: ${{fromJSON(inputs.variables).TenantId }}
          subscription-id: ${{fromJSON(inputs.variables).SubscriptionId }}

      - name: Sample Task
        uses: ./.github/actions/Common/helloWorld
        with:
          who-to-greet: 'world'
          variables: ${{ inputs.variables }}
          target-ring: ${{ inputs.target-ring }}

      - name: Retrieve JumpboxPassword secret
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: "${{ fromJson(inputs.variables).KeyVaultName}}" # replace with your Key Vault name
          secrets: "JumpboxPassword"
        id: kv

      - name: Deploy Bicep template
        run: |
          az deployment group create --resource-group '${{ fromJSON(inputs.variables).TargetResourceGroupCore }}' --template-file ./bicep/newVM.bicep --parameters virtualMachineName='myVM03' adminUsername='adminUser' adminPassword='${{ steps.kv.outputs.JumpboxPassword }}' virtualNetworkName='${{ fromJSON(inputs.variables).SpokeVnetName }}' subnetName='snet-privep-001'