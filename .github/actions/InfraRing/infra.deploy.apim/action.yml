name: "infra.deploy.apim"
description: "Deploy APIM"
inputs:
  variables:
    description: "Variables"
    required: true
  target-ring:
    description: "Target Ring"
    required: true
runs:
  using: "composite"
  steps:
    - uses: azure/arm-deploy@v1
      name: Create APIM Network Security Group
      with:
        scope: resourcegroup
        region: ${{fromJSON(inputs.variables).TargetRegion }}
        resourceGroupName: ${{fromJSON(inputs.variables).TargetResourceGroupCore }}
        template: ${{ github.workspace }}/ARM/NetworkSecurityGroups/deploy.json
        parameters: ${{ github.workspace }}/Parameters/NetworkSecurityGroups/parametersAPIM.json networkSecurityGroupName=${{ fromJSON(inputs.variables).NetworkSecurityGroupNameAPIM }} cuaId=${{ fromJSON(inputs.variables).cuaId }} 
        deploymentMode: 'Incremental'
        deploymentName: deployApimNetworkSecurityGroups-${{ github.run_id }}
        
    #TODO: REMOVE STATIC SUBNET NAME
    - name: Set APIM Subnet NSG
      uses: Azure/powershell@v1
      with:
        inlineScript: ${{ github.workspace }}/Scripts/Set-NSG.ps1 -ResourceGroupName ${{ fromJSON(inputs.variables).TargetResourceGroupCore }}  -virtualNetworkName ${{ fromJSON(inputs.variables).SpokeVnetName }} -subNetName snet-apim-001 -nsgName ${{ fromJSON(inputs.variables).NetworkSecurityGroupNameAPIM }} 
        azPSVersion: "latest"

    - name: Update APIM Parameters File
      uses: ./.github/actions/Common/updateParamFile
      with:
        parameter-file: ${{ github.workspace }}/Parameters/APIManagement/parameters.json
        variables-file: ${{ github.workspace }}/.github/Variables/Variables-${{ inputs.target-ring }}.env
           
    - uses: azure/arm-deploy@v1
      name: Deploy APIManagement
      with:
        scope: resourcegroup
        region: ${{fromJSON(inputs.variables).TargetRegion }}
        resourceGroupName: ${{fromJSON(inputs.variables).TargetResourceGroupCore }}
        template: ${{ github.workspace }}/ARM/APIManagement/deploy.json
        parameters: ${{ github.workspace }}/Parameters/APIManagement/parameters.json keyVaultName=${{ fromJSON(inputs.variables).KeyVaultName }} cuaId=${{ fromJSON(inputs.variables).cuaId }} 
        deploymentMode: 'Incremental'
        deploymentName: deployAPIManagement-${{ github.run_id }}    

    - name: Set up Custom domain for APIM
      uses: Azure/powershell@v1
      with:
        inlineScript: ${{ github.workspace }}/Scripts/Set-APIMCustomDomain.ps1 -KeyVaultName ${{ fromJSON(inputs.variables).KeyVaultName }} -ResourceGroupName ${{ fromJSON(inputs.variables).TargetResourceGroupCore }} -CertName ${{ fromJSON(inputs.variables).ApimCertName }} -ApimServiceName ${{ fromJSON(inputs.variables).ApiManagementServiceName }} -HostName ${{ fromJSON(inputs.variables).ApimFqdn }} 
        azPSVersion: "latest" 

    - name: Create A Record for APIM
      uses: Azure/powershell@v1
      with:
        inlineScript: ${{ github.workspace }}/Scripts/Set-APIManagementARecord.ps1 -ResourceGroup ${{ fromJSON(inputs.variables).TargetResourceGroupCore }} -CertDNSName ${{ fromJSON(inputs.variables).DnsZoneName }} -AName ${{ fromJSON(inputs.variables).ApimFqdn }} -ServiceName ${{ fromJSON(inputs.variables).ApiManagementServiceName }} 
        azPSVersion: "latest"

    - name: Assign Keyvault Permissions
      shell: bash
      run: |
        spid=$(az apim show --name ${{ fromJSON(inputs.variables).ApiManagementServiceName }}  --resource-group ${{ fromJSON(inputs.variables).TargetResourceGroupCore }} --query "[identity.principalId]" --output tsv)
        kvid=$(az keyvault show --name ${{ fromJSON(inputs.variables).KeyVaultName }} --resource-group ${{ fromJSON(inputs.variables).TargetResourceGroupCore }} --query "[id]" --output tsv)
        az role assignment create --assignee-object-id $spid --assignee-principal-type ServicePrincipal --role 'Key Vault Certificates Officer' --scope $kvid
        az role assignment create --assignee-object-id $spid --assignee-principal-type ServicePrincipal --role 'Key Vault Secrets Officer' --scope $kvid