StageCoreTimeout=0
ContinueJobsOnError=false
cuaId=[REPLACE]

SubscriptionId=[REPLACE]
TenantId=[REPLACE]
# RUNNERSERVICEPRINCIPALID IS THE AAD APPLICATION REGISTRATION USED BY THE GITHUB RUNNER
RunnerServicePrincipalId=[REPLACE]

TargetRegion=eastus2
AppName=[REPLACE]
lowerAppName=[REPLACE]
Env=ring3
lowerEnv=ring3
InstanceNumber=01
parameterRingN=Ring3
GithubResourceGroup=github
RunnerName=Gh${AppName}${Env}${InstanceNumber}
RunnerLabel=${AppName}${Env}${InstanceNumber}
DncAppWebAadClientId=[REPLACE]
VoteAppWebAadClientId=[REPLACE]

OrganizationName=[REPLACE]
RepoName=[REPLACE]

# Set AksAdminsGroupName, UsersToAdd, AdRoleDefinitionName variables if the build will be creating the AKS admin
# cluster group. Otherwise, provide the group object ID in the AksAadProfileAdminGroupObjectID variable
AksAdminsGroupName="AKSGroupCloudNativeApps"
UsersToAdd=""
AdRoleDefinitionName=""
AksAadProfileAdminGroupObjectID=4817c45d-1941-407b-a26d-bb5990497ca0
AksVersion=1.25.6
DeploymentType=AKS
# Options support: AKS, WebApp, ACA
DeployTelemetryMicroservice=false
DeployAPIM=false
# Options are: DEBUG, RELEASE
BuildConfiguration=RELEASE
# resource names
# follows https://docs.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming
TargetResourceGroupCore=rg-${AppName}-${Env}-${InstanceNumber}
# Uses RBAC for security
KeyVaultName=kv-${AppName}-${Env}-${InstanceNumber}
AksName=aks-${AppName}-${Env}-${InstanceNumber}
# Uses Access Policy for security
# This keyvault exists to support the app service deployment use case
# which requires access policies and not RBAC. See /docs/MustRead.md in the wiki for more info
KeyVaultName2=kv2-${AppName}-${Env}-${InstanceNumber}
storageAccountName=st${lowerAppName}${lowerEnv}${InstanceNumber} 
# must be lower case for storage account requirements
HubVnetName=vnet-hub-${TargetRegion}-${InstanceNumber}
SpokeVnetName=vnet-spoke-${TargetRegion}-${InstanceNumber}
NetworkSecurityGroupNameHub=nsg-Hub-${AppName}-${InstanceNumber}
NetworkSecurityGroupNameSpoke=nsg-Spoke-${AppName}-${InstanceNumber}
NetworkSecurityGroupNameBastion=nsg-Bastion-${AppName}-${InstanceNumber}
kvDnsZoneName=privatelink.vaultcore.azure.net
webAppDnsZoneName=privatelink.azurewebsites.net
blobDnsZoneName=privatelink.blob.core.windows.net
LogAnalyticsWorkspaceName=log-${AppName}-${Env}-${InstanceNumber}
appServicePlanName=plan-${AppName}-${Env}-${InstanceNumber}
ACRName=cr${lowerAppName}${lowerEnv}${InstanceNumber}
AACName=ac${lowerAppName}${lowerEnv}${InstanceNumber}
# Must be lower case, or ACR push fails
WebAppName=app-${AppName}-${Env}-${InstanceNumber}
KVPrivateEndpointName=${AppName}-kv-endpoint
KV2PrivateEndpointName=${AppName}-kv2-endpoint
WebAppPrivateEndPointName=${AppName}-app-endpoint
BlobPrivateEndPointName=${AppName}-storageaccount-blob-endpoint
ACRPrivateEndPointName=${AppName}-ACR-endpoint  
AACPrivateEndPointName=${AppName}-AAC-endpoint  
AgicPublicIPAddressesName=pip-${AppName}-${Env}-${TargetRegion}-${InstanceNumber}
AgicApplicationGatewayName=agic-${AppName}-${Env}-${InstanceNumber}
AgicApplicationGatewaySubnetName=snet-appgw-001
AgicApplicationGatewayFrontendPrivateIpAddress="10.1.5.9"
AksIngressCertSecretName=ingresscert
WebAppPrivateDnsZoneName=privatelink.azurewebsites.net
ACRPrivateDnsZoneName=privatelink.azurecr.io
AACPrivateDnsZoneName=privatelink.azconfig.io
WebAppPublicIPAddressesName=pip-webAppGW-${AppName}-${Env}-${TargetRegion}-${InstanceNumber}
WebAppApplicationGatewayName=webAppGW-${AppName}-${Env}-${InstanceNumber}
WebAppApplicationGatewaySubnetName=snet-appgw-001
WebAppApplicationGatewayFrontendPrivateIpAddress="10.1.5.10"
userMsiName=Msi-webAppGW-${AppName}-${Env}-${TargetRegion}-${InstanceNumber}
AGICCertName=AksCert
blobGroupID=blob
vaultGroupID=vault
  
# Computed variables -- likely no need to change these --
userMsiNameId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${userMsiName}
WebAppApplicationGatewayFrontendPublicIpResourceId=/subscriptions/${SubscriptionId}/resourcegroups/${TargetResourceGroupCore}/providers/Microsoft.Network/publicIPAddresses/${WebAppPublicIPAddressesName}
ACRNameString='{"loginServer":"${ACRName}.azurecr.io", "id" : "/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.ContainerRegistry/registries/${ACRName}"}'
PrivateEndpointTargetSubnetId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/virtualNetworks/${SpokeVnetName}/subnets/snet-privep-001
KVPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net
WebAppPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net
StorageAccountPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net
ACRPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io
AACPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io
KVPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.KeyVault/vaults/${KeyVaultName}
KV2PrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.KeyVault/vaults/${KeyVaultName2}
WebAppPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Web/sites/${WebAppName}
StorageAccountPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Storage/storageAccounts/${storageAccountName}
ACRPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.ContainerRegistry/registries/${ACRName}
AACPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.AppConfiguration/configurationStores/${AACName}

AksVnetSubnetId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/virtualNetworks/${SpokeVnetName}/subnets/snet-aks-001
LogAWorkspaceId=/subscriptions/${SubscriptionId}/resourcegroups/${TargetResourceGroupCore}/providers/microsoft.operationalinsights/workspaces/${LogAnalyticsWorkspaceName}
SubscriptionScope=/subscriptions/${SubscriptionId}
AgicApplicationGatewayFrontendPublicIpResourceId=/subscriptions/${SubscriptionId}/resourcegroups/${TargetResourceGroupCore}/providers/Microsoft.Network/publicIPAddresses/${AgicPublicIPAddressesName}
IngressApplicationGatewayId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/applicationGateways/${AgicApplicationGatewayName}
AppPlanResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Web/serverFarms/${appServicePlanName}
ACARuntimeVnetId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/virtualNetworks/${SpokeVnetName}/subnets/snet-acaapp-001
ACAInfraVnetId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/virtualNetworks/${SpokeVnetName}/subnets/snet-acacnt-001

# Azure Bastion
adminUsername=xadmin
azureBastionName=AzureBastion
bastionVNet=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/virtualNetworks/${SpokeVnetName}
azureBastionPipName=pip-azureBastion-${TargetRegion}-${Env}-${InstanceNumber}
JumpboxSubnet=snet-mgmt-001
JumpboxName=jb-${Env}-${InstanceNumber}

# Paths
parametersPath=Parameters
AppSourcePath=src
SettingsPath=ARM/WebApp/

# Node Api Microservice ENV variables
node-api-port=3000
node-api-version=v1

# Defender
Resources=("VirtualMachines", "AppServices", "StorageAccounts", "KubernetesService", "ContainerRegistry", "KeyVaults", "Dns", "Arm")

# ApplicationInsights
AppInsightsName=appi-${AppName}-${Env}-${InstanceNumber}
AppInsightsInstrumentationKey=placeholder
AgicCertSubject=/C=US/ST=Washington/L=Redmond/O=Microsoft/OU=MCS/CN=*

# Workbooks
AppGWWorkbookId=97e2c437-5017-4c28-ba09-19c16f914f1a
KVWorkbookId=10f24c7b-2d8b-4148-8abd-5343b78cb131

# ACA Param Names
ACAEnvName=aca-${AppName}-${Env}-${InstanceNumber}
ACRServerHostName=${ACRName}.azurecr.io
ACAAppName=${AppName}-node-api
#NodeAPIName=nodeapi
NetworkSecurityGroupNameAPIM=nsg-APIM-${AppName}-${InstanceNumber}
NetworkSecurityGroupNameAppGw=nsg-AppGw-${AppName}-${InstanceNumber}
ApiManagementServiceName=apim-${AppName}-${Env}-${InstanceNumber}
DnsZoneName=led.acna
ApimFqdn=api.${DnsZoneName}
ApimCertName=Acna-Cert
node-fqdn=node-appSvc.led.acna
NodeDNSZoneName=led.acna
#NodeCertName=Acna-Cert

# WebApp Cert
CertDNSName=Acna
SecretName=Acna
SecretPwdName=AcnaSecret
RootCertName=Acna-Root
SelfSignedCertificate=true

# Vote Web Front end
VoteWebName=voteweb
VoteWebDnsName=${VoteWebName}.${DnsZoneName}

# Node API
NodeAuthCertName=Acna-Cert
NodeCertName=nodeapi-led-acna
NodeApiName=nodeapi
NodeAcaApimSuffix=Nodeapiaca
NodeApiDnsName=${NodeApiName}.${DnsZoneName}
NodeAksApimSuffix=nodeapiaks
NodeAppSvcApimSuffix=nodeapiappsvc
NodeApiAppSvcBackendUrl=app-${AppName}-${Env}-${InstanceNumber}-node.azurewebsites.net
NodeApiAksBackendUrl=${NodeApiDnsName}

# DNC
DncAuthCertName=Acna-Cert
DncCertName=dncapi-led-acna
DncWebName=dncweb
DncWebDnsName=${DncWebName}.${DnsZoneName}
DncAksApimSuffix=dncapiaks
DncAcaApimSuffix=dncapiaca
DncAppSvcApimSuffix=dncapiappsvc 
DncApiName=dncapi
DncApiDnsName=${DncApiName}.${DnsZoneName}
DncApiAppSvcBackendUrl=app-${AppName}-${Env}-${InstanceNumber}-dncapi.azurewebsites.net
DncApiAcaBackendUrl=app-${AppName}-${Env}-${InstanceNumber}-dncapi.azurewebsites.net  
DncApiAksBackendUrl=${DncApiDnsName}

# Ingress Controller
LoadBalancerIP=10.1.2.240

# Telemetry
TelmsName=telms
TelmsDnsName=${TelmsName}.${DnsZoneName}
TelmsAuthCertName=Acna-Cert
Telemetry-ms-port=3002

# Cert
CertList=${VoteWebDnsName}~${NodeApiDnsName}~${TelmsDnsName}~${DncWebDnsName}~${DncApiDnsName}

# Telemetry Microservice
CosmosDBName=cdb${lowerAppName}${lowerEnv}${InstanceNumber}
CosmosDBDatabaseName=VoteTelemetry
CosmosDBCollectionName=telemetry-collection-1
CosmosDBConnectionString=placeholder
MongoCosmosPrivateEndPointName=${AppName}-MongoCosmos-endpoint
mongoCosmosPrivateDnsZoneName=privatelink.mongo.cosmos.azure.com
MongoCosmosPrivateEndpointPrivateDNSId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com
MongoCosmosPrivateEndpointServiceResourceId=/subscriptions/${SubscriptionId}/resourceGroups/${TargetResourceGroupCore}/providers/Microsoft.DocumentDB/databaseAccounts/${CosmosDBName}